{"version":3,"sources":["components/BookLoadingList/index.js","components/BookCard/index.js","components/BookList/index.js","components/LocalSearch/index.js","components/BookFilters/index.js","components/BookSearchView/index.js","hooks/useBookApi.js","App.js","reportWebVitals.js","index.js"],"names":["BookLoadingList","BookCard","book","className","alt","title","src","formats","width","BookList","books","id","map","LocalSearch","setBooks","useState","originalList","setOriginalList","firstRun","useRef","useEffect","current","length","console","log","handleChange","event","stopPropagation","key","target","value","results","filter","toLowerCase","includes","type","placeholder","onChange","e","BookFilters","BookSearchView","loading","setLoading","options","mode","headers","getBooks","page","fetch","then","response","json","data","useBookApi","App","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b1c263a.chunk.js","sourcesContent":["export const BookLoadingList = () => {\n    return <>{'Loading...'}</>\n}\n","import './BoookCard.styles.css'\n\nexport const BookCard = ({ book }) => {\n    return (\n        <div className={'book-card'}>\n            <img\n                alt={book.title}\n                src={book.formats['image/jpeg']}\n                width={100}\n            />\n            <small>{book.title}</small>\n        </div>\n    )\n}\n","import { BookCard } from '../BookCard'\nimport './BookList.styles.css'\n\nexport const BookList = ({ books }) => {\n    return (\n        <>\n            <div id={'layout'} className={'book-list'}>\n                {books.map((book) => {\n                    return <BookCard key={book.id} book={book} />\n                })}\n            </div>\n        </>\n    )\n}\n","import { useEffect, useRef, useState } from 'react'\nimport './LocalSearch.styles.css'\n\nexport const LocalSearch = ({ books, setBooks }) => {\n    const [originalList, setOriginalList] = useState([])\n    const firstRun = useRef(true)\n\n    useEffect(() => {\n        if (firstRun.current && books.length > 0) {\n            console.log('$ DEBUG firstRun', firstRun)\n            setOriginalList(books)\n            firstRun.current = false\n        }\n    }, [books])\n\n    const clearSearchField = () => {\n        setBooks(originalList)\n        firstRun.current = true\n    }\n\n    const handleChange = (event) => {\n        event.stopPropagation()\n\n        const key = event.target.value\n        if (key.length > 0) {\n            const results = originalList.filter((book) => {\n                return book.title.toLowerCase().includes(key.toLowerCase())\n            })\n            setBooks(results)\n        } else {\n            clearSearchField()\n        }\n    }\n\n    return (\n        <input\n            className={'local-search'}\n            type={'text'}\n            placeholder={'Search for a book'}\n            onChange={(e) => handleChange(e)}\n        />\n    )\n}\n","import './BookFilters.styles.css'\nimport { LocalSearch } from '../LocalSearch'\n\nexport const BookFilters = ({ books, setBooks }) => {\n    return (\n        <div className={'book-filters'}>\n            <LocalSearch books={books} setBooks={setBooks} />\n        </div>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { useBookApi } from '../../hooks/useBookApi'\nimport { BookLoadingList } from '../BookLoadingList'\nimport { BookList } from '../BookList'\nimport { BookFilters } from '../BookFilters'\n\nexport const BookSearchView = () => {\n    const { books, setBooks, getBooks, loading } = useBookApi()\n\n    useEffect(() => {\n        getBooks(1)\n        //eslint-disable-next-line\n    }, [])\n\n    useEffect(() => {\n        if (books.length > 0) {\n            console.log('$ DEBUG books[4]', books[4])\n        }\n    }, [books])\n\n    return (\n        <div>\n            <h1>Project Guttenberg catalog</h1>\n            <BookFilters books={books} setBooks={setBooks} />\n            {loading ? <BookLoadingList /> : <BookList books={books} />}\n        </div>\n    )\n}\n","import { useEffect, useState } from 'react'\n\nexport const useBookApi = () => {\n    const [books, setBooks] = useState([])\n    const [loading, setLoading] = useState(false)\n    const options = {\n        mode: 'cors',\n        headers: {\n            'Access-Control-Allow-Origin': '*',\n        },\n    }\n\n    useEffect(() => {\n        books.length > 0 && setLoading(false)\n    }, [books])\n\n    const getBooks = (page) => {\n        setLoading(true)\n        fetch('http://gutendex.com/books/?page=' + (page || '1'), options)\n            .then((response) => response.json())\n            .then((data) => {\n                setBooks(data.results)\n                return data\n            })\n    }\n\n    return {\n        books,\n        setBooks,\n        getBooks,\n        loading,\n    }\n}\n","import React, { Component } from 'react'\nimport './App.css'\nimport { BookSearchView } from './components/BookSearchView'\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <BookSearchView />\n            </div>\n        )\n    }\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry)\n                getFID(onPerfEntry)\n                getFCP(onPerfEntry)\n                getLCP(onPerfEntry)\n                getTTFB(onPerfEntry)\n            }\n        )\n    }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}